/**
 * Adyen api
 * Operations about payments, recurring and payout
 *
 * OpenAPI spec version: 18
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Amount', 'model/BankAccount', 'model/Card', 'model/Recurring'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Address'), require('./Amount'), require('./BankAccount'), require('./Card'), require('./Recurring'));
  } else {
    // Browser globals (root is window)
    if (!root.AdyenApiJs) {
      root.AdyenApiJs = {};
    }
    root.AdyenApiJs.StoreDetailAndSubmitRequest = factory(root.AdyenApiJs.ApiClient, root.AdyenApiJs.Address, root.AdyenApiJs.Amount, root.AdyenApiJs.BankAccount, root.AdyenApiJs.Card, root.AdyenApiJs.Recurring);
  }
}(this, function(ApiClient, Address, Amount, BankAccount, Card, Recurring) {
  'use strict';




  /**
   * The StoreDetailAndSubmitRequest model module.
   * @module model/StoreDetailAndSubmitRequest
   * @version 1.18.0
   */

  /**
   * Constructs a new <code>StoreDetailAndSubmitRequest</code>.
   * @alias module:model/StoreDetailAndSubmitRequest
   * @class
   * @param amount {module:model/Amount} 
   * @param merchantAccount {String} the merchant account which will be used for processing this request
   * @param recurring {module:model/Recurring} 
   * @param reference {String} the reference assigned to the payment
   * @param shopperEmail {String} the email address of the shopper / customer
   * @param shopperReference {String} a reference you use to uniquely identify the shopper (e.g. user ID or account ID)
   * @param card {module:model/Card} 
   */
  var exports = function(amount, merchantAccount, recurring, reference, shopperEmail, shopperReference, card) {
    var _this = this;

    _this['amount'] = amount;
    _this['merchantAccount'] = merchantAccount;
    _this['recurring'] = recurring;
    _this['reference'] = reference;
    _this['shopperEmail'] = shopperEmail;
    _this['shopperReference'] = shopperReference;


    _this['card'] = card;

  };

  /**
   * Constructs a <code>StoreDetailAndSubmitRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreDetailAndSubmitRequest} obj Optional instance to populate.
   * @return {module:model/StoreDetailAndSubmitRequest} The populated <code>StoreDetailAndSubmitRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('amount')) {
        obj['amount'] = Amount.constructFromObject(data['amount']);
      }
      if (data.hasOwnProperty('merchantAccount')) {
        obj['merchantAccount'] = ApiClient.convertToType(data['merchantAccount'], 'String');
      }
      if (data.hasOwnProperty('recurring')) {
        obj['recurring'] = Recurring.constructFromObject(data['recurring']);
      }
      if (data.hasOwnProperty('reference')) {
        obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
      }
      if (data.hasOwnProperty('shopperEmail')) {
        obj['shopperEmail'] = ApiClient.convertToType(data['shopperEmail'], 'String');
      }
      if (data.hasOwnProperty('shopperReference')) {
        obj['shopperReference'] = ApiClient.convertToType(data['shopperReference'], 'String');
      }
      if (data.hasOwnProperty('shopperStatement')) {
        obj['shopperStatement'] = ApiClient.convertToType(data['shopperStatement'], 'String');
      }
      if (data.hasOwnProperty('bank')) {
        obj['bank'] = BankAccount.constructFromObject(data['bank']);
      }
      if (data.hasOwnProperty('card')) {
        obj['card'] = Card.constructFromObject(data['card']);
      }
      if (data.hasOwnProperty('billingAddress')) {
        obj['billingAddress'] = Address.constructFromObject(data['billingAddress']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/Amount} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * the merchant account which will be used for processing this request
   * @member {String} merchantAccount
   */
  exports.prototype['merchantAccount'] = undefined;
  /**
   * @member {module:model/Recurring} recurring
   */
  exports.prototype['recurring'] = undefined;
  /**
   * the reference assigned to the payment
   * @member {String} reference
   */
  exports.prototype['reference'] = undefined;
  /**
   * the email address of the shopper / customer
   * @member {String} shopperEmail
   */
  exports.prototype['shopperEmail'] = undefined;
  /**
   * a reference you use to uniquely identify the shopper (e.g. user ID or account ID)
   * @member {String} shopperReference
   */
  exports.prototype['shopperReference'] = undefined;
  /**
   * the text to appear on the shopper's statement
   * @member {String} shopperStatement
   */
  exports.prototype['shopperStatement'] = undefined;
  /**
   * @member {module:model/BankAccount} bank
   */
  exports.prototype['bank'] = undefined;
  /**
   * @member {module:model/Card} card
   */
  exports.prototype['card'] = undefined;
  /**
   * @member {module:model/Address} billingAddress
   */
  exports.prototype['billingAddress'] = undefined;


  /**
   * @return {module:model/Amount}
   */
  exports.prototype.getAmount = function() {
    return this['amount'];
  }

  /**
   * @param {module:model/Amount} amount
   */
  exports.prototype.setAmount = function(amount) {
    this['amount'] = amount;
  }


  /**
   * Returns the merchant account which will be used for processing this request
   * @return {String}
   */
  exports.prototype.getMerchantAccount = function() {
    return this['merchantAccount'];
  }

  /**
   * Sets the merchant account which will be used for processing this request
   * @param {String} merchantAccount the merchant account which will be used for processing this request
   */
  exports.prototype.setMerchantAccount = function(merchantAccount) {
    this['merchantAccount'] = merchantAccount;
  }


  /**
   * @return {module:model/Recurring}
   */
  exports.prototype.getRecurring = function() {
    return this['recurring'];
  }

  /**
   * @param {module:model/Recurring} recurring
   */
  exports.prototype.setRecurring = function(recurring) {
    this['recurring'] = recurring;
  }


  /**
   * Returns the reference assigned to the payment
   * @return {String}
   */
  exports.prototype.getReference = function() {
    return this['reference'];
  }

  /**
   * Sets the reference assigned to the payment
   * @param {String} reference the reference assigned to the payment
   */
  exports.prototype.setReference = function(reference) {
    this['reference'] = reference;
  }


  /**
   * Returns the email address of the shopper / customer
   * @return {String}
   */
  exports.prototype.getShopperEmail = function() {
    return this['shopperEmail'];
  }

  /**
   * Sets the email address of the shopper / customer
   * @param {String} shopperEmail the email address of the shopper / customer
   */
  exports.prototype.setShopperEmail = function(shopperEmail) {
    this['shopperEmail'] = shopperEmail;
  }


  /**
   * Returns a reference you use to uniquely identify the shopper (e.g. user ID or account ID)
   * @return {String}
   */
  exports.prototype.getShopperReference = function() {
    return this['shopperReference'];
  }

  /**
   * Sets a reference you use to uniquely identify the shopper (e.g. user ID or account ID)
   * @param {String} shopperReference a reference you use to uniquely identify the shopper (e.g. user ID or account ID)
   */
  exports.prototype.setShopperReference = function(shopperReference) {
    this['shopperReference'] = shopperReference;
  }


  /**
   * Returns the text to appear on the shopper's statement
   * @return {String}
   */
  exports.prototype.getShopperStatement = function() {
    return this['shopperStatement'];
  }

  /**
   * Sets the text to appear on the shopper's statement
   * @param {String} shopperStatement the text to appear on the shopper's statement
   */
  exports.prototype.setShopperStatement = function(shopperStatement) {
    this['shopperStatement'] = shopperStatement;
  }


  /**
   * @return {module:model/BankAccount}
   */
  exports.prototype.getBank = function() {
    return this['bank'];
  }

  /**
   * @param {module:model/BankAccount} bank
   */
  exports.prototype.setBank = function(bank) {
    this['bank'] = bank;
  }


  /**
   * @return {module:model/Card}
   */
  exports.prototype.getCard = function() {
    return this['card'];
  }

  /**
   * @param {module:model/Card} card
   */
  exports.prototype.setCard = function(card) {
    this['card'] = card;
  }


  /**
   * @return {module:model/Address}
   */
  exports.prototype.getBillingAddress = function() {
    return this['billingAddress'];
  }

  /**
   * @param {module:model/Address} billingAddress
   */
  exports.prototype.setBillingAddress = function(billingAddress) {
    this['billingAddress'] = billingAddress;
  }



  return exports;
}));


